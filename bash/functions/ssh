#!/bin/bash
# ssh-agent-test - test for a running SSH agent
# ssh-agent-respawn - restart the SSH agent


# SSH keys to load automatically on agent restart
declare -a export SSH_AGENT_AUTOKEYS
export SSH_AGENT_AUTOKEYS

# Default lifetime of keys added to the agent
export SSH_AGENT_LIFETIME=8h


function ssh-agent-test() {
    (( $# != 1 )) && { echo "Usage: $FUNCNAME <env-file>" >&2 ; return 1 ; }

    local ssh_agent_envfile="$1"

    # Test for the env file
    [[ ! -f "$ssh_agent_envfile" ]] && return 1

    # Source env file
    . "$ssh_agent_envfile" &>/dev/null
    # Test the agent
    ssh-add -l &>/dev/null
    (( $? == 2 )) && return 1

    # All checks passed: valid agent
    return 0
}


function ssh-agent-respawn() {
    (( $# != 1 )) && { echo "Usage: $FUNCNAME <env-file>" >&2 ; return 1 ; }

    local ssh_agent_envfile="$1"

    # Kill all existing agents for the current user
    # (SSH_AGENT_PID may not be set so we can't use `ssh-agent -k`)
    pkill -u "$USER" ssh-agent
    # /!\ `killall ssh-agent` doesn't work here! For some reason it can't find
    # any running ssh-agent processes.

    # Start the agent
    ssh-agent -t "$SSH_AGENT_LIFETIME" -s >"$ssh_agent_envfile"
    . "$ssh_agent_envfile"

    # Add auto keys with year-long lifetime (except if leap year, ok)
    ssh-add -t 365d "${SSH_AGENT_AUTOKEYS[@]}"

    return 0
}

