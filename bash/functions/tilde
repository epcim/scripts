#!/bin/bash
# tilde - perform tilde expansion on a string

# Enable extended globbing, never disable it (why was it disabled in the first place anyway?)
shopt -s extglob


function tilde() {
    # NB: Upon error, tilde outputs its input string as is and returns a non-0 error code
    #     This means that in any case, tilde's output is still safe to use

    # Help message
    if [[ $# != 1 || "$1" == "--help" || "$1" == "-h" ]]
    then
        echo "  Usage: $FUNCNAME <path>"
        echo "Perform tilde expansion on a path."
        echo "Outputs its input as is when expansion cannot be performed."
        return
    fi

    # Enable extended globbing *again* (in case it was malevolently disabled)
    shopt -s extglob

    # Get the pattern to expand
    local PREFIX="${1%%/*}"
    # Make sure there's actually a tilde to expand
    # /!\ To be on the safe side, only accept paths composed of a restricted set of characters!
    [[ "$PREFIX" == ~*([[:alnum:]_-]) ]] || { echo "$1" ; return 1 ; }
    # Perform expansion with/without trailing path
    if [[ "$PREFIX" == "$1" ]]
    then
        # Expansion is left to Bash, to ensure Bash-like behavior
        eval echo $PREFIX
    else
        # Expansion is left to Bash, to ensure Bash-like behavior
        eval echo -n $PREFIX
        # Print the remainder of the path as is
        echo "/${1#*/}"
    fi
}

