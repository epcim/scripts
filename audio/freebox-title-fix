#!/bin/bash
# "Fix" MP3 id3 title tags by prepending them with the track #

if [[ $# -lt 1 || "$1" == "-h" || "$1" == "--help" ]]
then
    echo <<- _EOF_
	  Usage: ${0##*/} <directories>
	
	Prepend the track # to the id3 title tag of MP3 audio tracks in a directory.
	Also convert the id3 tags to v2.4, stripping all other versions.
	
	Note:
	* The first space-delimited block of characters in the filename is assumed to
	  be the track # (this is highly tied to the organization of my library).
	* The main purpose of this tool is to work around a misfeature of my ISP's
	  shitty DLNA music player, which orders tracks alphabetically by title tag
	  -- not even by filename! *sigh*
	
	_EOF_
    exit
fi

function require() {
    if ! command -v "$1" &> /dev/null
    then
        echo "Error: the \`$1\` utility is required but not found in your PATH!" >&2
        exit 1
    fi
}

function trackno() {
    printf "${f%% *}"
}

function tracktitle() {
    id3ted -l "$f" | sed -ne '/^TIT2:/ s/TIT2: //p'
}

# Check for required utilities
require id3ted

# Don't use * literally when no files are matched
shopt -s nullglob

quiet=0

for d in "$@"
do
    cd "$d"
    d="${d%/}"
    proceed=1
    refresh=1
    empty=1
    if ! (( $quiet ))
    then
        while (( $refresh ))
        do
            refresh=0
            printf "Overview for '%s':" "$d"
            for f in *.mp3 *.MP3
            do
                empty=0
                printf "\n  %s - %s" "$(trackno)" "$(tracktitle)"
            done
            if (( $empty ))
            then
                printf "\E[2K\rSkipping '%s': no MP3 files\n" "$d"
                proceed=0
            else
                echo
                read -r -p "Proceed? [y/N/r] " proceed
                case "$proceed" in
                    y|Y) proceed=1 ;;
                    n|N) proceed=0 ;;
                    r|R) refresh=1 ;;
                esac
            fi
        done
    fi
    if (( $proceed ))
    then
        for f in *.mp3 *.MP3
        do
            empty=0
            printf "\E[2K\rProcessing '%s'... %s" "$d" "$f"
            id3ted -2 "$f"
            #id3ted -n '%t.mp3' "$f"
            id3ted -t "$(trackno) - $(tracktitle)" "$f"
            id3ted -s "$f"
        done
        if (( $empty ))
        then
            printf "Skipping '%s': no MP3 files\n" "$d"
        else
            printf "\E[2K\rProcessing '%s'... done\n" "$d"
        fi
    fi
    (( $quiet )) || echo
    cd "$OLDPWD"
done

