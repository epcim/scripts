#!/bin/bash

: "${POLLING_PERIOD:=60s}"

die() {
    printf -- "Error: %s" "$*"
    exit 1
} >&2

cleanup() {
    rm -f "$script"
}

if (( $# != 2 )) || [[ "$1" =~ ^(-h|--help)$ ]]
then
    cat >&2 <<-EOF
	  Usage: ${0##*/} <pid> <script>
	
	Run a script after a PID terminates.
	
	unattended regularly polls the system to check whether the target PID
	has terminated. This is inacurrate as the PID might get terminated and
	reused between polls. The polling period may be adjusted through the
	POLLING_PERIOD environment variable (default 60s).
	EOF
    exit 0
fi

pid="$1"
script="$2"

# Checks
[[ "$script" != "-" && ! -x "$script" ]] && die "script is not executable"

# Wait for the PID to terminate
while [[ -d "/proc/$pid" ]]; do sleep "$POLLING_PERIOD"; done

# Dump the script to a file if from stdin
if [[ "$script" == "-" ]]
then
    script="$(mktemp --tmpdir unattended-XXXXXXXX)" || die "can't create temporary file for script"
    trap -- cleanup EXIT
    cat >"$script" || die "can't write script to temporary file"
    chmod +x "$script" || die "can't make temporary file executable"
fi

# Execute the script
"$script"
