#!/bin/bash
# Check whether files that should be hardlinked indeed point to the same inode

# Source useful functions
source ${0%/*}/../bash/functions/die
source ${0%/*}/../bash/functions/tilde

# Define some helper functions
# rc_incr: increase RC to the given value, if not already there
function rc_incr() { # 1:target_rc
    [[ $RC -lt $1 ]] && RC=$1
}

# Check the arguments
if [[ $# == 0 || "$1" == "-h" || "$1" == "--help" ]]
then
    echo "  Usage: ${0##*/} [options] <hardlinks file>

Check the consistency of hardlinks described in the given hardlinks file.
The hardlinks file shall contain several lines, each line consisting of a
list of files sharing the same inode. The first file of a line is used as
reference file when fixing broken links.

Available options:
    -f|--fix    fix broken hardlinks
                all files on a line are hardlinked to the line's reference file
    -q|--quiet  be quiet (return code indicates success/failure)

Return codes:
    0           all links ok
    1           some links broken (fixed with --fix)
    2           some files missing (not fixed with --fix)
    3           some reference files missing (not fixed with --fix)
    10          other error"
    exit
fi

# Process options
OPTSDONE=
FIX=
QUIET=
while [[ -z "$OPTSDONE" ]]
do
    case "$1" in
        -f|--fix)
            FIX=true
            ;;

        -q|--quiet)
            QUIET=true
            ;;

        --)
            OPTSDONE=true
            ;;

        -*)
            die -r10 "unknown option '$1'"
            ;;

        *)
            break
    esac
    shift
done
[[ $# != 1 ]] && die -r10 "missing hardlinks file"

# Read the hardlinks file line by line
RC=0
while read FILES
do
    # Check that all files on a single line share the same inode
    INODE=0
    for F in $FILES
    do
        # Check for comments
        [[ "${F:0:1}" == "#" ]] && break
        # Perform tilde expansion
        F=$(tilde $F)
        # Check that the file exists
        if [[ ! -f "$F" ]]
        then
            if [[ $INODE == 0 ]]
            then
                [[ -z "$QUIET" ]] && echo "Missing reference: $F"
                rc_incr 3
                continue 2
            else
                [[ -z "$QUIET" ]] && echo "Missing: $F"
                rc_incr 2
                continue
            fi
        fi
        # Get the file's inode
        IF=$(stat -c %i "$F")
        # Take the path and inode of the first file as a reference
        if [[ $INODE == 0 ]]
        then
            FILE=$F
            INODE=$IF
        # If inodes do not match, print an error
        elif [[ $INODE != $IF ]]
        then
            if [[ -z "$FIX" ]]
            then
                [[ -z "$QUIET" ]] && echo "Broken hardlink: $FILES"
            else
                rm "$F"
                ln "$FILE" "$F"
                [[ -z "$QUIET" ]] && echo "Fixed broken hardlink: $FILES"
            fi
            rc_incr 1
            break
        fi
    done
done < "$1"
[[ -z "$QUIET" && $RC == 0 ]] && echo "All good."

# Return the resulting return code
exit $RC

