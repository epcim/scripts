#!/bin/bash
# Check whether files that should be hardlinked indeed point to the same inode

# Source useful functions
source ${0%/*}/../bash/functions/die

# Check the arguments
if [[ $# == 0 || "$1" == "-h" || "$1" == "--help" ]]
then
    echo "  Usage: ${0##*/} [options] <hardlinks file>

Check the consistency of hardlinks described in the file given as a parameter:
all files must map to the same inode number.
The hardlinks file should contain a series of lines, each line consisting of a
list of files sharing the same inode.
When the --fix option is specified, all files on a line are hardlinked to the
inode of the first file of the line.

Available options:
    -f|--fix    fix mismatched hardlinks (using the first file on each line)"
    exit
fi

# Process options
OPTSDONE=""
FIX=""
while [[ -z "$OPTSDONE" ]]
do
    case "$1" in
        -f|--fix)
            FIX=true
            ;;

        --)
            OPTSDONE=true
            ;;

        -*)
            die "unknown option '$1'"
            ;;

        *)
            break
    esac
    shift
done
[[ $# != 1 ]] && die "missing hardlinks file"

# Read the hardlinks file line by line
while read FILES
do
    # Check that all files on a single line share the same inode
    INODE=0
    for F in $FILES
    do
        # Check that the file exists
        if [[ ! -f "$F" ]]
        then
            echo "Missing: $F"
            continue
        fi
        # Get the file's inode
        IF=$(ls -i "$F" | cut -d" " -f1)
        # Take the path and inode of the first file as a reference
        if [[ $INODE == 0 ]]
        then
            FILE=$F
            INODE=$IF
        # If inodes do not match, print an error
        elif [[ $INODE != $IF ]]
        then
            if [[ -z "$FIX" ]]
            then
                echo "Mismatch: $FILES"
            else
                rm "$F"
                ln "$FILE" "$F"
                echo "Fixed mismatch: $FILES"
            fi
            break
        fi
    done
done < "$1"

