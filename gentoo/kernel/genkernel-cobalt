#!/bin/bash

KERNELDIR="${KERNELDIR:-/usr/src/linux}"
KERNELCONF="${KERNELCONF:-$KERNELDIR/.config.cobalt}"

if [[ "$1" == "-h" || "$1" == "--help" ]]
then
    cat <<- _EOF_
	  Usage: ${0##*/} [options]
	
	Generates a kernel and its initramfs with LVM, framebuffer and splash
	support. Also strips the initramfs from unneeded stuff (modules and HW
	detection logic).
	
	The kernel is configured and built in:
	    $KERNELDIR
	using configuration:
	    $KERNELCONF
	_EOF_
    exit
fi


genkernel --save-config --mrproper --install --symlink --no-ramdisk-modules --no-all-ramdisk-modules --kerneldir="$KERNELDIR" --kernel-config="$KERNELCONF" --mountboot --makeopts="-j8" --no-keymap --splash="emerge-world" --splash-res="1920x1080" --lvm --no-mdadm --no-dmraid --no-luks --kernname="cobalt" --no-firmware --compress-initramfs-type="gzip" all


if (( $? == 0 ))
then
    echo
    echo
    INITRAMFS="$(ls -ct -1 /boot/initramfs* | head -n 1)"    # use most recently touched initramfs
    INITDIR="${0##*/}-initramfs"
    IMPORTER="${0%/*}/import-initramfs"
    if [[ -f "$INITRAMFS" && -x "$IMPORTER" ]]
    then
        echo "Including additional files into initramfs..."
        mkdir -p "$INITDIR"
        pushd "$INITDIR"
        gunzip -c "$INITRAMFS" | cpio -i
        popd
        "$IMPORTER" /usr/share/v86d/initramfs "$INITDIR"
        pushd "$INITDIR"
        find . -print0 | cpio -0 -o -H newc | gzip -c -9 > "$INITRAMFS"
        popd
        rm -Rf "$INITDIR"
    else
        echo "ERROR: Cannot include additional files: importer not found, or initramfs not found"
    fi


    echo
    echo
    GRUBCFG="/boot/grub/grub.cfg"
    if [[ -f "$GRUBCFG" ]]
    then
        grub2-mkconfig -o "$GRUBCFG"
    else
        echo "WARNING: Cannot update Grub: $GRUBCFG not found"
    fi
fi

if (( $? == 0 ))
then
    echo
    echo
    emerge -av @module-rebuild
fi

echo
echo "Done."
echo

