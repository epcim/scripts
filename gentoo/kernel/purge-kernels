#!/bin/bash

if [[ "$1" == "-h" || "$1" == "--help" ]]
then
    echo "  Usage: ${0##*/}

Purge old kernel versions from the system.
The purge affects the following:
  portage:      sys-kernel/gentoo-sources
  /boot:        kernel image, initramfs and system.map
  /lib/modules: kernel modules
  /usr/src:     kernel sources"
    exit
fi

# TODO: --pretend


# Bail out early on error
set -e
# Source some useful functions
source ${0%/*}/../../bash/functions/die


# Get the current kernel version
GKERNEL=`uname -r`
KERNEL=${GKERNEL/-gentoo/}


# TODO: factor all those seds

# Purge gentoo-sources
for p in `eix '-I*' --format '<installedversions:EQNAMEVERSION>' -C sys-kernel -e gentoo-sources`
do
    # Try to extract a kernel version from the package name
    K=`echo "${p##*/}" | sed -n -e 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\(-r[[:digit:]]\+\)\?\)$/\1/p'`
    if [[ -n "$K" && "$K" != "$KERNEL" ]]
    then
        echo -n "Unmerging $p... "
        emerge --depclean "$p" > /dev/null && echo -e '\E[01;32mok' || die -i '\E[01;31mfail'
    fi
done

# Purge /usr/src
for d in `find /usr/src -mindepth 1 -maxdepth 1 -type d`
do
    # Try to extract a kernel version from the dirname
    K=`echo "${d##*/}" | sed -n -e 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+-gentoo\(-r[[:digit:]]\+\)\?\)$/\1/p'`
    if [[ -n "$K" && "$K" != "$GKERNEL" ]]
    then
        echo -n "Removing $d... "
        rm -Rf "$d" && echo -e '\E[01;32mok' || die -i '\E[01;31mfail'
    fi
done

# Mount /boot if necessary
grep -q '/boot' /proc/mounts || { MOUNTED=1 ; mount /boot ; }
# Purge /boot
for f in `find /boot -maxdepth 1 -type f`
do
    # Try to extract a kernel version from the filename
    K=`echo "${f##*/}" | sed -n -e 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+-gentoo\(-r[[:digit:]]\+\)\?\)$/\1/p'`
    if [[ -n "$K" && "$K" != "$GKERNEL" ]]
    then
        echo -n "Removing $f... "
        rm "$f" && echo -e '\E[01;32mok' || die -i '\E[01;31mfail'
    fi
done
# Unmount /boot if it was mounted
[[ "$MOUNTED" ]] && umount /boot

# Purge /lib/modules
for d in `find /lib/modules -mindepth 1 -maxdepth 1 -type d`
do
    # Try to extract a kernel version from the dirname
    K=`echo "${d##*/}" | sed -n -e 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+-gentoo\(-r[[:digit:]]\+\)\?\)$/\1/p'`
    if [[ -n "$K" && "$K" != "$GKERNEL" ]]
    then
        echo -n "Removing $d... "
        rm -Rf "$d" && echo -e '\E[01;32mok' || die -i '\E[01;31mfail'
    fi
done

